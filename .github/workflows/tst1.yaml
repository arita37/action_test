name: Pull Request Action
on:
  push:
    branches:
      - "**"
      - "!master"
      - "!main"


jobs:

  ##################################################
  main_run:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Process
        env:
          SUCCESS: true
        run: |
          if $SUCCESS
          then
            echo "Success"
          else
            echo "failed"
            exit 1
          fi

          
  ############################################## 
  create-pull-request:
    needs : [main_run] # List of dependent Jobs
    if: success()   # check if all previous (needs) dependent jobs were successfull  then only execute
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get BASE_BRANCH
        shell: bash
        run: |
          # If you want to figure it out dynamically
          echo "BASE_BRANCH=$( echo 'main')" >> $GITHUB_ENV
          
      - name: Create Pull Request
        id: create_pr
        continue-on-error: true
        uses: actions/github-script@v6
        env:
          BASE_BRANCH: ${{ env.BASE_BRANCH }}
        with:
          script: |
            const { repo, owner } = context.repo;
            const {BASE_BRANCH} = process.env;
            const result = await github.rest.pulls.create({
              title: `Auto Merging ${{ github.ref_name }} into ${ BASE_BRANCH }`,
              owner,
              repo,
              head: '${{ github.ref_name }}',
              base: `${BASE_BRANCH}`,
              body: [
                'PR is auto-generated after sucessfull process.,',
                'Uses : [actions/github-script](https://github.com/actions/github-script).'
              ].join('\n')
            });
            return result.data.number;
      - name: Get Pull Request
        id: get_pr
        uses: actions/github-script@v6
        env:
          BASE_BRANCH: ${{ env.BASE_BRANCH }}
        with:
          script: |
            const { repo, owner } = context.repo;
            const {BASE_BRANCH} = process.env;
            const result = await github.rest.pulls.list({
              owner,
              repo,
              state: 'open',
              head: '${{ github.ref_name }}',
              base: `${BASE_BRANCH}`
            });
            return result.data[0].number;
      - name: Merge Pull Request
        id: merge_pr
        uses: actions/github-script@v6
        env:
          BASE_BRANCH: ${{ env.BASE_BRANCH }}
        with:
          script: |
            const { repo, owner } = context.repo;
            const {BASE_BRANCH} = process.env;
            await github.rest.issues.addLabels({
              owner,
              repo,
              issue_number: "${{ steps.get_pr.outputs.result }}",
              labels: ['Auto-PR']
            });
            await github.rest.pulls.merge({
              owner,
              repo,
              pull_number: "${{ steps.get_pr.outputs.result }}"
            });
            return result.data.number;









